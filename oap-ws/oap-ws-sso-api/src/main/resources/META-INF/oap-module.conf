name = oap-ws-sso-api

services {
//  oap-ws-sso-roles-provider.implementation = oap.ws.sso.ConfigSecurityRolesProvider
//
//  oap-ws-sso-roles {
//    implementation = oap.ws.sso.SecurityRoles
//    parameters.provider = <modules.this.oap-ws-sso-roles-provider>
//  }
//
//  jwt-token-generator {
//    implementation = oap.ws.sso.JwtTokenGenerator
//    parameters {
//        accessSecret = <change me>
//        refreshSecret = <change me>
//        issuer = <change me>
//        accessSecretExpiration = 15m
//        refreshSecretExpiration = 1d
//    }
//  }

  oap-ws-sso-user-provider {
    implementation = oap.ws.sso.UserProvider
    remote {
      name = oap-account.default-user-provider
    }
  }

  oap-ws-sso-api-key-interceptor {
    implementation = oap.ws.sso.interceptor.ApiKeyInterceptor
    parameters {
      userProvider = <modules.this.oap-ws-sso-user-provider>
//      authenticator = <modules.oap-ws-sso.oap-ws-sso-authenticator>
    }
  }

  oap-ws-sso-throttle-login-interceptor {
    implementation = oap.ws.sso.interceptor.ThrottleLoginInterceptor
  }

  oap-ws-sso-jwt-security-interceptor {
    implementation = oap.ws.sso.interceptor.JWTSecurityInterceptor
    parameters {
      //        jwtExtractor = <modules.oap-ws-sso-api.oap-ws-sso-token-extractor>
      userProvider = <modules.this.oap-ws-sso-user-provider>
      //        roles = <modules.oap-ws-sso-api.oap-ws-sso-roles>
    }
  }

  //  oap-ws-sso-token-extractor {
//    implementation = oap.ws.sso.JWTExtractor
//      parameters {
//        secret = <change me>
//        issuer = <change me>
//        roles = <modules.this.oap-ws-sso-roles>
//      }
//  }
}
